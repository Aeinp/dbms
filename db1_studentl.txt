CREATE TABLE student(
	snum INT,
	sname VARCHAR(10),
	major VARCHAR(2),
	level VARCHAR(2),
	age int,
	primary key(snum)
);
CREATE TABLE faculty(
	fid INT,
	fname VARCHAR(20),
	deptid INT,
	PRIMARY KEY(fid)
);
CREATE TABLE class(
	cname VARCHAR(20),
	meets_at VARCHAR(10),
	room VARCHAR(10),
	fid INT,
	PRIMARY KEY(cname),
	FOREIGN KEY(fid) REFERENCES faculty(fid)
);
CREATE TABLE enrolled(
	snum INT,
	cname VARCHAR(20),
	PRIMARY KEY(snum, cname),
	FOREIGN KEY(snum) REFERENCES student(snum),
	FOREIGN KEY(cname) REFERENCES class(cname)
);
INSERT INTO student (snum, sname, major, level, age)
VALUES (1, 'jhon', 'CS', 'Sr', 19),
	(2, 'smith', 'CS', 'Jr', 20),
	(3, 'jacob', 'CV', 'Sr', 20),
	(4, 'tom', 'CS', 'Jr', 20),
	(5, 'sid', 'CS', 'Jr', 20),
	(6, 'harry', 'CS', 'Sr', 21);
INSERT INTO faculty (fid, fname, deptid)
VALUES (11, 'Harshith', 1000),
	(12, 'Mohan', 1000),
	(13, 'Kumar', 1001),
	(14, 'Shobha', 1002),
	(15, 'Shan', 1000);
INSERT INTO class (cname, meets_at, room, fid)
VALUES ('class1', 'noon', 'room1', 14),
	('class10', 'morning', 'room128', 14),
	('class2', 'morning', 'room2', 12),
	('class3', 'morning', 'room3', 11),
	('class4', 'evening', 'room4', 14),
	('class5', 'night', 'room3', 15),
	('class6', 'morning', 'room2', 14),
	('class7', 'morning', 'room3', 14);
INSERT INTO enrolled (snum, cname)
VALUES (1, 'class1'),
	(2, 'class1'),
	(3, 'class2'),
	(3, 'class3'),
	(4, 'class3'),
	(5, 'class4'),
	(1, 'class5'),
	(2, 'class5'),
	(3, 'class5'),
	(4, 'class5'),
	(5, 'class5'),
	(6, 'class5');
QUERIES: Query 1: Find the names of all juniors (level = Jr) who are enrolled for class taught by professor Harshith.
SELECT DISTINCT s.sname
FROM student s,
	class c,
	faculty f,
	enrolled e
WHERE s.snum = e.snum
	AND e.cname = c.cname
	AND s.level = 'jr'
	AND f.fname = 'Harshith'
	AND f.fid = c.fid;
Query 2: Find the names of all classes that either meet in room128
or have 5
or more students enrolled.
SELECT DISTINCT cname
FROM class
WHERE room = 'room128'
	OR cname IN (
		SELECT e.cname
		FROM enrolled e
		GROUP BY e.cname
		HAVING COUNT(*) >= 5
	);
Query 3: Find the names of all students who are enrolled in two classes.
select s.sname
from student s,
	enrolled e
where e.snum = s.snum
group by s.sname
having count(*) = 2;
Query 4: Find the names of faculty members who teach in every room in which some class is taught.
SELECT f.fname,
	f.fid
FROM faculty f
WHERE f.fid in (
		SELECT fid
		FROM class
		GROUP BY fid
		HAVING COUNT(*) =(
				SELECT COUNT(DISTINCT room)
				FROM class
			)
	);
Query 5: Find the names of the faculty who teach in room128 who has less than 3 students.
select distinct f.fname
from faculty f,
	class c
where c.fid = f.fid
	and room = "room3"
	and c.cname in (
		select c1.cname
		from class c1
		group by c1.cname
		having count(*) >= 3
	);
Que 6.create view test as
SELECT DISTINCT f.fname
FROM faculty f
WHERE f.fid IN (
		SELECT c.fid
		FROM class c,
			enrolled e
		WHERE c.cname = e.cname
		GROUP BY c.cname
		HAVING COUNT(c.cname) < 5
	);